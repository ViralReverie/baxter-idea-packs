name: Baxter Secrets Check
on:
  workflow_dispatch: {}   # lets you run it by hand
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps
        run: pip install requests praw
      - name: Verify secrets & APIs
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}   # optional
        run: |
          python - << 'PY'
          import os, sys, requests, praw
          ok = True
          def has(k):
              v = os.getenv(k)
              print(f"{k}: {'SET' if v else 'MISSING'}")
              return bool(v)
          print("Checking required secrets...")
          ok &= has("REDDIT_CLIENT_ID")
          ok &= has("REDDIT_CLIENT_SECRET")
          ok &= has("REDDIT_USER_AGENT")
          print("Optional:")
          has("YOUTUBE_API_KEY")

          if all(os.getenv(k) for k in ["REDDIT_CLIENT_ID","REDDIT_CLIENT_SECRET","REDDIT_USER_AGENT"]):
              try:
                  reddit = praw.Reddit(client_id=os.getenv("REDDIT_CLIENT_ID"),
                                       client_secret=os.getenv("REDDIT_CLIENT_SECRET"),
                                       user_agent=os.getenv("REDDIT_USER_AGENT"))
                  it = next(iter(reddit.subreddit("funny").top(time_filter="day", limit=1)), None)
                  print("Reddit API test:", "OK" if it else "No items (still OK)")
              except Exception as e:
                  ok = False; print("Reddit API test FAILED:", e)

          if os.getenv("YOUTUBE_API_KEY"):
              try:
                  url = ("https://www.googleapis.com/youtube/v3/videos"
                         "?part=snippet&chart=mostPopular&regionCode=US&maxResults=1&key="
                         + os.getenv("YOUTUBE_API_KEY"))
                  r = requests.get(url, timeout=10)
                  print("YouTube API test:", "OK" if r.ok else f"HTTP {r.status_code}")
                  if not r.ok: ok = False
              except Exception as e:
                  ok = False; print("YouTube API test FAILED:", e)

          if not ok:
              print("One or more checks failed. Fix your secrets and rerun.", file=sys.stderr)
              sys.exit(1)
          else:
              print("All checks passed.")
          PY
